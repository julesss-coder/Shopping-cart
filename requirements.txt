Requirements:
Goal: https://altcademy-shopping-cart.netlify.app/

Steps:
- [x] Set up HTML structure in Bootstrap 3.

- [x] Calculate and display the total price.
- [x] Calculate and display the sub total price of each item.
- [x] Allow user to add a new item.
- [x] Allow user to delete an item.
- [ ] Use Git to manage version control and push your work to a GitHub repository.
- [x] Clean up looks.
- [ ] Add background image and/or other design.
- [ ] Set up Git Page for this project, for its final version.
- [ ] When list is empty, column titles should disappear.
- [ ] There should be helper text under add item input fields, reminding the user to enter an item text and a number (if the user enters something else.)
- [ ] Fix borders (column titles should not be outside borders).
- [ ] Fix offset before 'subtotal' title on all breakpoints
- [ ] Fix background image: should cover whole screen.
  - [ ] Fix font so that it is legible on background.
- [ ] Fix subtotal headline - the columns to the left should need less space. (remove col-sm-3). OR: give 2 columns to subtotal. We are currently only using 11 columns.

Feel free to add CSS personalizations to this assignment to make it your own.

//======

// Background image:
https://unsplash.com/photos/N-AC7tTcD-c by Graphic Node

Code Review:
- Where could I use jQuery where I have used vanilla JavaScript?
- Where could I use Underscore?
- Where could I use Bootstrap where I have used CSS?

Questions:
Can I / How can I combine jQuery and vanilla JS methods?



// WHAT I LEARNED
Write down exactly the logical steps that need to happen to get your result. Do so with pen and paper BEFORE you try to program it. If you get stuck, think through the steps again (with pen an paper). Never code without a plan.

// DATAFLOW
DomContent loads --> document.ready() called
  updateTotalPrice called
    for each element with .item: updateSubtotal(element) called

  on input: 
    after timeout:
      updateSubtotal(current row) called for this one item
      updateTotalPrice() called

  on click on remove button:
    removeItem() called
    updateTotalPrice() called
  
  on click on add item button:
    addItem();
    updateSubtotal() called for added item
    updateTotalPrice();

  on keyup (Enter key) on add item field:
    addItem();
    updateSubtotal() called for added item
    updateTotalPrice();

// Logging the order of code read:
  application.js:58: function expressions before document.ready() parsed 1649759469156

  index.html:20 DOMContentLoaded from HTML file:  1649759469188

  index.html:23 load from HTML file:  1649759469189
  
  application.js:63 document.ready() fires 1649759469192